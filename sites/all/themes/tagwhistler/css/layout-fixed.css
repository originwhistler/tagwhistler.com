/**
 * @file
 * Layout Styling (DIV Positioning)
 *
 * Define CSS classes to create a table-free, 3-column, 2-column, or single
 * column layout depending on whether blocks are enabled in the left or right
 * columns.
 *
 * This layout is based on the Zen Columns layout method.
 *   http://drupal.org/node/201428
 *
 * Only CSS that affects the layout (positioning) of major elements should be
 * listed here.  Such as:
 *   display, position, float, clear, width, height, min-width, min-height
 *   margin, border, padding, overflow
 */


/*
 * Body
 */
body {
}

#page-wrapper,
.region-bottom {
  /*
   * If you want to make the page a fixed width and centered in the viewport,
   * this is the standards-compliant way to do that. See also the ie6.css file
   * for the necessary IE5/IE6quirks hack to center a div.
   */
  margin-left: auto;
  margin-right: auto;
  width: 960px;
}

#page {
}

/*
 * Header
 */
#header {
}

#header .section {
  margin: 0 10px;
  padding: 0;
}

.region-header {
}


/*
 * Navigation
 */
#navigation {
  
}

.with-navigation #content,
.with-navigation .region-sidebar-first {
 /* margin-top: 50px; /* Set this to the same value as the navigation height above. */
}

#navigation .section {
  margin: 0 auto;
  width: 920px;
  padding: 0 10px;
}


/*
 * Main (container for everything else)
 */
#main-wrapper {
  position: relative;
}

#main {
}

/*
 * Content
 */
#content,
.no-sidebars #content {
  float: left; /* LTR */
  width: 960px;
  margin-left: 0; /* LTR */
  margin-right: -960px; /* LTR */ /* Negative value of #content's width + left margin. */
  padding: 0; /* DO NOT CHANGE. Add padding or margin to #content .section. */
}

.sidebar-first #content {
  width: 640px;
  margin-left: 320px; /* LTR */ /* The width of .region-sidebar-first. */
  margin-right: -960px; /* LTR */ /* Negative value of #content's width + left margin. */
}

#content .section {
  margin: 20px 10px;
  padding: 0;
}

/*
 * Highlight
 */
#highlight_1{
  margin-right: 20px;	
} 
 
.highlight{
  float: left;
  width: 300px;
  margin-bottom: 20px;
}



/*
 * First sidebar
 */
.region-sidebar-first {
  float: left; /* LTR */
  width: 320px;
  margin-left: 0; /* LTR */
  margin-right: -320px; /* LTR */ /* Negative value of .region-sidebar-first's width + left margin. */
  padding: 0; /* DO NOT CHANGE. Add padding or margin to .region-sidebar-first .section. */
}

.region-sidebar-first .section {
  margin: 20px 10px;
  padding: 0;
}

/*
 * Shin
 */
#shin-wrapper{
	margin: 0 0 20px 0;	
}
 
.shin{
  float: left;
  width: 300px;
  margin: 0 10px;
}


/*
 * Footer
 */
.region-footer {
  margin: 0 10px;
  padding: 0;
}

/*
 * Page bottom
 */
.region-bottom /* See also the #page-wrapper declaration above that this div shares. */ {
}

/*
 * Prevent overflowing content
 */
#header,
#content,
#navigation,
.region-sidebar,
.region-footer,
.region-bottom {
  overflow: visible;
  word-wrap: break-word; /* A very nice CSS3 property */
}

/*
 * If a div.clearfix doesn't have any content after it and its bottom edge
 * touches the bottom of the viewport, Firefox and Safari will mistakenly
 * place several pixels worth of space between the bottom of the div and the
 * bottom of the viewport. Uncomment this CSS property to fix this.
 * Note: with some over-large content, this property might cause scrollbars
 * to appear on the #page-wrapper div.
 */
/*
#page-wrapper {
  overflow-y: hidden;
}
*/
